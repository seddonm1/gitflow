name: Create Hotfix

on:
  workflow_dispatch:
    inputs:
      description:
        description: "Brief description of the hotfix"
        required: true
        type: string

jobs:
  validate:
    name: Validate Hotfix Conditions
    runs-on: ubuntu-latest
    outputs:
      can_proceed: ${{ steps.check.outputs.can_proceed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch and conditions
        id: check
        run: |
          # Must be run from main branch
          if [ "${{ github.ref_name }}" != "main" ]; then
            echo "ðŸ”´ Hotfix must be created from main branch"
            echo "can_proceed=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          # Check if there are existing release/hotfix branches
          if git branch -r | grep -E "origin/(release|hotfix)/" | head -1; then
            echo "ðŸ”´ Release or hotfix already in progress"
            echo "can_proceed=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "ðŸŸ¢ Hotfix conditions validated"
          echo "can_proceed=true" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  version_bump:
    name: Bump Patch Version
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.can_proceed == 'true'
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
      hotfix_branch: ${{ steps.branch.outputs.branch_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Call project-specific version bump
        id: bump
        uses: ./.github/workflows/user/version_bump.yml
        with:
          bump_type: patch

      - name: Create hotfix branch
        id: branch
        run: |
          BRANCH_NAME="hotfix/${{ steps.bump.outputs.new_version }}"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "ðŸŸ¢ Created hotfix branch: $BRANCH_NAME"

  create_pr:
    name: Create Hotfix PR
    runs-on: ubuntu-latest
    needs: [validate, version_bump]
    if: needs.validate.outputs.can_proceed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Pull Request
        run: |
          gh pr create \
            --base main \
            --head "${{ needs.version_bump.outputs.hotfix_branch }}" \
            --title "Hotfix v${{ needs.version_bump.outputs.new_version }}" \
            --body "$(cat <<'EOF'
          ## Hotfix v${{ needs.version_bump.outputs.new_version }}

          **Base Version**: ${{ needs.validate.outputs.base_version }}
          **New Version**: ${{ needs.version_bump.outputs.new_version }}

          ### Description
          ${{ inputs.description }}

          ### Changes
          - Version bumped from ${{ needs.validate.outputs.base_version }} to ${{ needs.version_bump.outputs.new_version }}
          - Critical bug fixes applied
          - Ready for emergency deployment

          **Note**: The develop branch is currently locked. It will be unlocked automatically when this PR is closed or merged to main.
          EOF
          )"

          echo "ðŸŸ¢ Hotfix PR created for v${{ needs.version_bump.outputs.new_version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
